# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
# HTTP-based Todoist MCP Server with Docker deployment
FROM node:22-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package.json .

# Install dependencies, ignoring scripts to skip "prepare"
RUN npm install --ignore-scripts

# Copy the rest of the application code
COPY src ./src
COPY tsconfig.json .

# Build the project
RUN npm run build

# Use a smaller Node.js image for the runtime
FROM node:22-alpine AS release

# Set working directory
WORKDIR /app

# Copy the built files and node_modules from the builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/package.json .
COPY --from=builder /app/package-lock.json .

# Install production dependencies
RUN npm ci --omit=dev

# Install cloudflared
RUN wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -O cloudflared && \
    chmod +x cloudflared && \
    mv cloudflared /usr/local/bin/

# Environment variable for the Todoist API token should be provided at runtime
# Example: docker run -e TODOIST_API_TOKEN=your_token_here your-image

# Add health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "console.log('OK')" || exit 1

# Expose the port that the server listens to
EXPOSE 8766

# Command to run the server
ENTRYPOINT ["node", "dist/index.js"]
